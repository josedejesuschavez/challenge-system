version: "3.9"
services:
    backend:
        build:
            context: .
            dockerfile: Dockerfile-Backend
        command: flask run --host="0.0.0.0"
        environment:
            - FLASK_APP=src/Infraestructure/Web/Flask/wsgi.py
            - FLASK_ENV=development
            - FLASK_DEBUG=1
            - PYTHONPATH=/code
        ports:
            - 5000:5000
        volumes:
            - .:/code
        depends_on:
            - database
    frontend:
        build:
            context: .
            dockerfile: Dockerfile-Frontend
        #command: ng serve --host 0.0.0.0
        ports:
            - 4200:4200
        volumes:
            - ./src/Infraestructure/Web:/code
        depends_on:
            - backend
    database:
        image: postgres:13.1
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=challenge
            - POSTGRES_PASSWORD=123qweQWE
            - POSTGRES_DB=challenge
    adminer:
        image: adminer
        ports:
            - 8080:8080
        depends_on:
            - database
    #elasticsearch:
    #    image: elasticsearch:6.4.2
    #    ports:
    #        - 9200:9200
    #    volumes:
    #        - './elasticstack/elasticsearch/data:/usr/share/elasticsearch/data'
    #logstash:
    #    image: logstash:6.4.2
    #    ports:
    #        - 9600:9600
    #    volumes:
    #        - './elasticstack/logstash/pipeline:/usr/share/logstash/pipeline'
    #        - './elasticstack/logstash/logs:/logs'
    #    depends_on:
    #        - elasticsearch
    #kibana:
    #    image: kibana:6.4.2
    #    ports:
    #        - 5601:5601
    #    depends_on:
    #        - elasticsearch